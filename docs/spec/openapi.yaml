openapi: 3.0.0
info:
  title: Calendar API
  description: Manipulates events and other calendar data.
  termsOfService: https://developers.google.com/terms/
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  version: v3
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://calendar-json.googleapis.com/$discovery/rest?version=v3
    version: v1
  x-providerName: googleapis.com
  x-serviceName: calendar
externalDocs:
  url: https://developers.google.com/google-apps/calendar/firstapp
servers:
- url: https://www.googleapis.com/calendar/v3
tags:
- name: acl
- name: calendarList
- name: calendars
- name: channels
- name: colors
- name: events
- name: freebusy
paths:
  /calendars:
    post:
      tags:
      - calendars
      description: Creates a secondary calendar.
      operationId: create.calendar
      requestBody:
        description: Data required to create the calendar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
      responses:
        "200":
          description: "A `gcalendar:Calendar` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /calendars/{calendarId}:
    get:
      tags:
      - calendars
      description: Returns metadata for a calendar.
      operationId: calendar.calendars.get
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "A `gcalendar:Calendar` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
    put:
      tags:
      - calendars
      description: Updates metadata for a calendar.
      operationId: calendar.calendars.update
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Data required to update the calendar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
      responses:
        "200":
          description: "A `gcalendar:Calendar` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    delete:
      tags:
      - calendars
      description: Deletes a secondary calendar. Use calendars.clear for clearing
        all events on primary calendars.
      operationId: delete.calendar
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "If successful `()`, otherwise an error"
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    patch:
      tags:
      - calendars
      description: Updates metadata for a calendar. This method supports patch semantics.
      operationId: calendar.calendars.patch
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Data required to update the calendar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
      responses:
        "200":
          description: "A `gcalendar:Calendar` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /calendars/{calendarId}/acl:
    get:
      tags:
      - acl
      description: Returns the rules in the access control list for the calendar.
      operationId: calendar.acl.list
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: maxResults
        in: query
        description: Maximum number of entries returned on one result page. By default
          the value is 100 entries. The page size can never be larger than 250 entries.
          Optional
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: pageToken
        in: query
        description: Token specifying which result page to return. Optional
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: showDeleted
        in: query
        description: Whether to include deleted ACLs in the result. Deleted ACLs are
          represented by role equal to "none". Deleted ACLs will always be included
          if syncToken is provided. Optional. The default is False
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: syncToken
        in: query
        description: |-
          Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
          If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
          Learn more about incremental synchronization.
          Optional. The default is to return all entries
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: "A `gcalendar:Acl` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acl'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    post:
      tags:
      - acl
      description: Creates an access control rule.
      operationId: calendar.acl.insert
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendNotifications
        in: query
        description: Whether to send notifications about the calendar sharing change.
          Optional. The default is True
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Data required to create access permissions for the calendar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclRule'
      responses:
        "200":
          description: "A `gcalendar:AclRule` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclRule'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /calendars/{calendarId}/acl/{ruleId}:
    get:
      tags:
      - acl
      description: Returns an access control rule.
      operationId: calendar.acl.get
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        description: ACL rule identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "A `gcalendar:AclRule` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclRule'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
    put:
      tags:
      - acl
      description: Updates an access control rule.
      operationId: calendar.acl.update
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        description: ACL rule identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendNotifications
        in: query
        description: Whether to send notifications about the calendar sharing change.
          Note that there are no notifications on access removal. Optional. The default
          is True
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Data required to update access permissions for the calendar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclRule'
      responses:
        "200":
          description: "A `gcalendar:AclRule` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclRule'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    delete:
      tags:
      - acl
      description: Deletes an access control rule.
      operationId: calendar.acl.delete
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        description: ACL rule identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "If successful `()`, otherwise an error"
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    patch:
      tags:
      - acl
      description: Updates an access control rule. This method supports patch semantics.
      operationId: calendar.acl.patch
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        description: ACL rule identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendNotifications
        in: query
        description: Whether to send notifications about the calendar sharing change.
          Note that there are no notifications on access removal. Optional. The default
          is True
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Data required to update access permissions for the calendar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclRule'
      responses:
        "200":
          description: "A `gcalendar:AclRule` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclRule'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /calendars/{calendarId}/clear:
    post:
      tags:
      - calendars
      description: Clears a primary calendar. This operation deletes all events associated
        with the primary calendar of an account.
      operationId: calendar.calendars.clear
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "If successful `()`, otherwise an error"
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /calendars/{calendarId}/events:
    get:
      tags:
      - events
      description: Returns events on the specified calendar.
      operationId: calendar.events.list
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: eventTypes
        in: query
        description: "Event types to return. Optional. Possible values are: \n- \"\
          default\" \n- \"focusTime\" \n- \"outOfOffice\" \n- \"workingLocation\"\
          This parameter can be repeated multiple times to return events of different\
          \ types. Currently, these are the only allowed values for this field: \n\
          - [\"default\", \"focusTime\", \"outOfOffice\"] \n- [\"default\", \"focusTime\"\
          , \"outOfOffice\", \"workingLocation\"] \n- [\"workingLocation\"] The default\
          \ is [\"default\", \"focusTime\", \"outOfOffice\"].\nAdditional combinations\
          \ of these four event types will be made available in later releases"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: iCalUID
        in: query
        description: Specifies an event ID in the iCalendar format to be provided
          in the response. Optional. Use this if you want to search for an event by
          its iCalendar ID
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: maxAttendees
        in: query
        description: "The maximum number of attendees to include in the response.\
          \ If there are more than the specified number of attendees, only the participant\
          \ is returned. Optional"
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: maxResults
        in: query
        description: "Maximum number of events returned on one result page. The number\
          \ of events in the resulting page may be less than this value, or none at\
          \ all, even if there are more events matching the query. Incomplete pages\
          \ can be detected by a non-empty nextPageToken field in the response. By\
          \ default the value is 250 events. The page size can never be larger than\
          \ 2500 events. Optional"
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: orderBy
        in: query
        description: "The order of the events returned in the result. Optional. The\
          \ default is an unspecified, stable order"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - startTime
          - updated
      - name: pageToken
        in: query
        description: Token specifying which result page to return. Optional
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: privateExtendedProperty
        in: query
        description: Extended properties constraint specified as propertyName=value.
          Matches only private properties. This parameter might be repeated multiple
          times to return events that match all given constraints
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: q
        in: query
        description: "Free text search terms to find events that match these terms\
          \ in the following fields: summary, description, location, attendee's displayName,\
          \ attendee's email. Optional"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sharedExtendedProperty
        in: query
        description: Extended properties constraint specified as propertyName=value.
          Matches only shared properties. This parameter might be repeated multiple
          times to return events that match all given constraints
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: showDeleted
        in: query
        description: "Whether to include deleted events (with status equals \"cancelled\"\
          ) in the result. Cancelled instances of recurring events (but not the underlying\
          \ recurring event) will still be included if showDeleted and singleEvents\
          \ are both False. If showDeleted and singleEvents are both True, only single\
          \ instances of deleted events (but not the underlying recurring events)\
          \ are returned. Optional. The default is False"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: showHiddenInvitations
        in: query
        description: Whether to include hidden invitations in the result. Optional.
          The default is False
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: singleEvents
        in: query
        description: "Whether to expand recurring events into instances and only return\
          \ single one-off events and instances of recurring events, but not the underlying\
          \ recurring events themselves. Optional. The default is False"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: syncToken
        in: query
        description: "Token obtained from the nextSyncToken field returned on the\
          \ last page of results from the previous list request. It makes the result\
          \ of this list request contain only entries that have changed since then.\
          \ All events deleted since the previous list request will always be in the\
          \ result set and it is not allowed to set showDeleted to False.\nThere are\
          \ several query parameters that cannot be specified together with nextSyncToken\
          \ to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n\
          - orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n\
          - timeMin \n- timeMax \n- updatedMin All other query parameters should be\
          \ the same as for the initial synchronization to avoid undefined behavior.\
          \ If the syncToken expires, the server will respond with a 410 GONE response\
          \ code and the client should clear its storage and perform a full synchronization\
          \ without any syncToken.\nLearn more about incremental synchronization.\n\
          Optional. The default is to return all entries"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timeMax
        in: query
        description: "Upper bound (exclusive) for an event's start time to filter\
          \ by. Optional. The default is not to filter by start time. Must be an RFC3339\
          \ timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00,\
          \ 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If\
          \ timeMin is set, timeMax must be greater than timeMin"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timeMin
        in: query
        description: "Lower bound (exclusive) for an event's end time to filter by.\
          \ Optional. The default is not to filter by end time. Must be an RFC3339\
          \ timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00,\
          \ 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If\
          \ timeMax is set, timeMin must be smaller than timeMax"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timeZone
        in: query
        description: Time zone used in the response. Optional. The default is the
          time zone of the calendar
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: updatedMin
        in: query
        description: "Lower bound for an event's last modification time (as a RFC3339\
          \ timestamp) to filter by. When specified, entries deleted since this time\
          \ will always be included regardless of showDeleted. Optional. The default\
          \ is not to filter by last modification time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: "A `gcalendar:Events` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
    post:
      tags:
      - events
      description: Creates an event.
      operationId: calendar.events.insert
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conferenceDataVersion
        in: query
        description: Version number of conference data supported by the API client.
          Version 0 assumes no conference data support and ignores conference data
          in the event's body. Version 1 enables support for copying of ConferenceData
          as well as for creating new conferences using the createRequest field of
          conferenceData. The default is 0
        required: false
        style: form
        explode: true
        schema:
          maximum: 1
          minimum: 0
          type: integer
      - name: maxAttendees
        in: query
        description: "The maximum number of attendees to include in the response.\
          \ If there are more than the specified number of attendees, only the participant\
          \ is returned. Optional"
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: sendUpdates
        in: query
        description: Whether to send notifications about the creation of the new event.
          Note that some emails might still be sent. The default is false
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - externalOnly
          - none
      - name: supportsAttachments
        in: query
        description: Whether API client performing operation supports event attachments.
          Optional. The default is False
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Data required to create an event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        "200":
          description: "A `gcalendar:Event` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /calendars/{calendarId}/events/import:
    post:
      tags:
      - events
      description: Imports an event. This operation is used to add a private copy
        of an existing event to a calendar.
      operationId: calendar.events.import
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conferenceDataVersion
        in: query
        description: Version number of conference data supported by the API client.
          Version 0 assumes no conference data support and ignores conference data
          in the event's body. Version 1 enables support for copying of ConferenceData
          as well as for creating new conferences using the createRequest field of
          conferenceData. The default is 0
        required: false
        style: form
        explode: true
        schema:
          maximum: 1
          minimum: 0
          type: integer
      - name: supportsAttachments
        in: query
        description: Whether API client performing operation supports event attachments.
          Optional. The default is False
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Data required to import an event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        "200":
          description: "A `gcalendar:Event` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /calendars/{calendarId}/events/quickAdd:
    post:
      tags:
      - events
      description: Creates an event based on a simple text string.
      operationId: calendar.events.quickAdd
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: text
        in: query
        description: The text describing the event to be created
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sendUpdates
        in: query
        description: Guests who should receive notifications about the creation of
          the new event
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - externalOnly
          - none
      responses:
        "200":
          description: "A `gcalendar:Event` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /calendars/{calendarId}/events/{eventId}:
    get:
      tags:
      - events
      description: "Returns an event based on its Google Calendar ID. To retrieve\
        \ an event using its iCalendar ID, call the events.list method using the iCalUID\
        \ parameter."
      operationId: calendar.events.get
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: eventId
        in: path
        description: Event identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: maxAttendees
        in: query
        description: "The maximum number of attendees to include in the response.\
          \ If there are more than the specified number of attendees, only the participant\
          \ is returned. Optional"
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: timeZone
        in: query
        description: Time zone used in the response. Optional. The default is the
          time zone of the calendar
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: "A `gcalendar:Event` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
    put:
      tags:
      - events
      description: Updates an event.
      operationId: calendar.events.update
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: eventId
        in: path
        description: Event identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conferenceDataVersion
        in: query
        description: Version number of conference data supported by the API client.
          Version 0 assumes no conference data support and ignores conference data
          in the event's body. Version 1 enables support for copying of ConferenceData
          as well as for creating new conferences using the createRequest field of
          conferenceData. The default is 0
        required: false
        style: form
        explode: true
        schema:
          maximum: 1
          minimum: 0
          type: integer
      - name: maxAttendees
        in: query
        description: "The maximum number of attendees to include in the response.\
          \ If there are more than the specified number of attendees, only the participant\
          \ is returned. Optional"
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: sendUpdates
        in: query
        description: "Guests who should receive notifications about the event update\
          \ (for example, title changes, etc.)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - externalOnly
          - none
      - name: supportsAttachments
        in: query
        description: Whether API client performing operation supports event attachments.
          Optional. The default is False
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Data required to update the event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        "200":
          description: "A `gcalendar:Event` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
    delete:
      tags:
      - events
      description: Deletes an event.
      operationId: calendar.events.delete
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: eventId
        in: path
        description: Event identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendUpdates
        in: query
        description: Guests who should receive notifications about the deletion of
          the event
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - externalOnly
          - none
      responses:
        "200":
          description: "if successful `()`, otherwise an error"
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
    patch:
      tags:
      - events
      description: Updates an event. This method supports patch semantics.
      operationId: calendar.events.patch
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: eventId
        in: path
        description: Event identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: conferenceDataVersion
        in: query
        description: Version number of conference data supported by the API client.
          Version 0 assumes no conference data support and ignores conference data
          in the event's body. Version 1 enables support for copying of ConferenceData
          as well as for creating new conferences using the createRequest field of
          conferenceData. The default is 0
        required: false
        style: form
        explode: true
        schema:
          maximum: 1
          minimum: 0
          type: integer
      - name: maxAttendees
        in: query
        description: "The maximum number of attendees to include in the response.\
          \ If there are more than the specified number of attendees, only the participant\
          \ is returned. Optional"
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: sendUpdates
        in: query
        description: "Guests who should receive notifications about the event update\
          \ (for example, title changes, etc.)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - externalOnly
          - none
      - name: supportsAttachments
        in: query
        description: Whether API client performing operation supports event attachments.
          Optional. The default is False
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Data required to update the event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        "200":
          description: "A `gcalendar:Event` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /calendars/{calendarId}/events/{eventId}/instances:
    get:
      tags:
      - events
      description: Returns instances of the specified recurring event.
      operationId: calendar.events.instances
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: eventId
        in: path
        description: Recurring event identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: maxAttendees
        in: query
        description: "The maximum number of attendees to include in the response.\
          \ If there are more than the specified number of attendees, only the participant\
          \ is returned. Optional"
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: maxResults
        in: query
        description: Maximum number of events returned on one result page. By default
          the value is 250 events. The page size can never be larger than 2500 events.
          Optional
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: originalStart
        in: query
        description: The original start time of the instance in the result. Optional
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: Token specifying which result page to return. Optional
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: showDeleted
        in: query
        description: Whether to include deleted events (with status equals "cancelled")
          in the result. Cancelled instances of recurring events will still be included
          if singleEvents is False. Optional. The default is False
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: timeMax
        in: query
        description: Upper bound (exclusive) for an event's start time to filter by.
          Optional. The default is not to filter by start time. Must be an RFC3339
          timestamp with mandatory time zone offset
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timeMin
        in: query
        description: Lower bound (inclusive) for an event's end time to filter by.
          Optional. The default is not to filter by end time. Must be an RFC3339 timestamp
          with mandatory time zone offset
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timeZone
        in: query
        description: Time zone used in the response. Optional. The default is the
          time zone of the calendar
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: "A `gcalendar:Events` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /calendars/{calendarId}/events/{eventId}/move:
    post:
      tags:
      - events
      description: "Moves an event to another calendar, i.e. changes an event's organizer."
      operationId: calendar.events.move
      parameters:
      - name: calendarId
        in: path
        description: Calendar identifier of the source calendar where the event currently
          is on
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: eventId
        in: path
        description: Event identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: destination
        in: query
        description: Calendar identifier of the target calendar where the event is
          to be moved to
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sendUpdates
        in: query
        description: Guests who should receive notifications about the change of the
          event's organizer
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - externalOnly
          - none
      responses:
        "200":
          description: "A `gcalendar:Event` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /colors:
    get:
      tags:
      - colors
      description: Returns the color definitions for calendars and events.
      operationId: calendar.colors.get
      responses:
        "200":
          description: "A `gcalendar:Colors` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Colors'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /freeBusy:
    post:
      tags:
      - freebusy
      description: Returns free/busy information for a set of calendars.
      operationId: calendar.freebusy.query
      requestBody:
        description: Data required to return free/busy information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreeBusyRequest'
      responses:
        "200":
          description: "A `gcalendar:FreeBusyResponse` if successful, otherwise an\
            \ error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeBusyResponse'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /users/me/calendarList:
    get:
      tags:
      - calendarList
      description: Returns the calendars on the user's calendar list.
      operationId: calendar.calendarList.list
      parameters:
      - name: maxResults
        in: query
        description: Maximum number of entries returned on one result page. By default
          the value is 100 entries. The page size can never be larger than 250 entries.
          Optional
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
      - name: minAccessRole
        in: query
        description: The minimum access role for the user in the returned entries.
          Optional. The default is no restriction
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - freeBusyReader
          - owner
          - reader
          - writer
      - name: pageToken
        in: query
        description: Token specifying which result page to return. Optional
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: showDeleted
        in: query
        description: Whether to include deleted calendar list entries in the result.
          Optional. The default is False
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: showHidden
        in: query
        description: Whether to show hidden entries. Optional. The default is False
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: syncToken
        in: query
        description: |-
          Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.
          To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.
          If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
          Learn more about incremental synchronization.
          Optional. The default is to return all entries
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: "A `gcalendar:CalendarList` if successful, otherwise an error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarList'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
    post:
      tags:
      - calendarList
      description: Inserts an existing calendar into the user's calendar list.
      operationId: calendar.calendarList.insert
      parameters:
      - name: colorRgbFormat
        in: query
        description: "Whether to use the foregroundColor and backgroundColor fields\
          \ to write the calendar colors (RGB). If this feature is used, the index-based\
          \ colorId field will be set to the best matching option automatically. Optional.\
          \ The default is False"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Data required to identify the calendar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarListEntry'
      responses:
        "200":
          description: "A `gcalendar:CalendarListEntry` if successful, otherwise an\
            \ error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListEntry'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
  /users/me/calendarList/{calendarId}:
    get:
      tags:
      - calendarList
      description: Returns a calendar from the user's calendar list.
      operationId: calendar.calendarList.get
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "A `gcalendar:CalendarListEntry` if successful, otherwise an\
            \ error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListEntry'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
    put:
      tags:
      - calendarList
      description: Updates an existing calendar on the user's calendar list.
      operationId: calendar.calendarList.update
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: colorRgbFormat
        in: query
        description: "Whether to use the foregroundColor and backgroundColor fields\
          \ to write the calendar colors (RGB). If this feature is used, the index-based\
          \ colorId field will be set to the best matching option automatically. Optional.\
          \ The default is False"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Data required to update an existing calendar entry on the user's
          calendar list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarListEntry'
      responses:
        "200":
          description: "A `gcalendar:CalendarListEntry` if successful, otherwise an\
            \ error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListEntry'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    delete:
      tags:
      - calendarList
      description: Removes a calendar from the user's calendar list.
      operationId: calendar.calendarList.delete
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "If successful `()`, otherwise an error"
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    patch:
      tags:
      - calendarList
      description: Updates an existing calendar on the user's calendar list. This
        method supports patch semantics.
      operationId: calendar.calendarList.patch
      parameters:
      - name: calendarId
        in: path
        description: "Calendar identifier. To retrieve calendar IDs call the calendarList.list\
          \ method. If you want to access the primary calendar of the currently logged\
          \ in user, use the \"primary\" keyword"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: colorRgbFormat
        in: query
        description: "Whether to use the foregroundColor and backgroundColor fields\
          \ to write the calendar colors (RGB). If this feature is used, the index-based\
          \ colorId field will be set to the best matching option automatically. Optional.\
          \ The default is False"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Data required to update an existing calendar entry on the user's
          calendar list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarListEntry'
      responses:
        "200":
          description: "A `gcalendar:CalendarListEntry` if successful, otherwise an\
            \ error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListEntry'
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
components:
  schemas:
    FreeBusyResponse:
      type: object
      properties:
        calendars:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FreeBusyCalendar'
          description: List of free/busy information for calendars
        kind:
          type: string
          description: Type of the resource ("calendar#freeBusy")
          default: calendar#freeBusy
        groups:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FreeBusyGroup'
          description: Expansion of groups
        timeMax:
          type: string
          description: The end of the interval
          format: date-time
        timeMin:
          type: string
          description: The start of the interval
          format: date-time
    ConferenceSolution:
      type: object
      properties:
        name:
          type: string
          description: The user-visible name of this solution. Not localized
        iconUri:
          type: string
          description: The user-visible icon for this solution
        key:
          $ref: '#/components/schemas/ConferenceSolutionKey'
      description: Represents conference solutions that users can utilize when scheduling
        or participating in events and meetings
    EventDateTime:
      type: object
      properties:
        date:
          type: string
          description: "The date, in the format \"yyyy-mm-dd\", if this is an all-day\
            \ event"
          format: date
        dateTime:
          type: string
          description: "The time, as a combined date-time value (formatted according\
            \ to RFC3339). A time zone offset is required unless a time zone is explicitly\
            \ specified in timeZone"
          format: date-time
        timeZone:
          type: string
          description: "The time zone in which the time is specified. (Formatted as\
            \ an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring\
            \ events this field is required and specifies the time zone in which the\
            \ recurrence is expanded. For single events this field is optional and\
            \ indicates a custom time zone for the event start/end"
      description: "Defines the date, time, and time zone information for events"
    EntryPoint:
      type: object
      properties:
        entryPointFeatures:
          type: array
          description: "Features of the entry point, such as being toll or toll-free.\
            \ One entry point can have multiple features. However, toll and toll-free\
            \ cannot be both set on the same entry point"
          items:
            type: string
        password:
          type: string
          description: |-
            The password to access the conference. The maximum length is 128 characters.
            When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
            Optional
        regionCode:
          type: string
          description: |-
            The CLDR/ISO 3166 region code for the country associated with this phone access. Example: "SE" for Sweden.
            Calendar backend will populate this field only for EntryPointType.PHONE
        pin:
          type: string
          description: |-
            The PIN to access the conference. The maximum length is 128 characters.
            When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
            Optional
        entryPointType:
          type: string
          description: "The type of the conference entry point.\nPossible values are:\
            \  \n- \"video\" - joining a conference over HTTP. A conference can have\
            \ zero or one video entry point.\n- \"phone\" - joining a conference by\
            \ dialing a phone number. A conference can have zero or more phone entry\
            \ points.\n- \"sip\" - joining a conference over SIP. A conference can\
            \ have zero or one sip entry point.\n- \"more\" - further conference joining\
            \ instructions, for example additional phone numbers. A conference can\
            \ have zero or one more entry point. A conference with only a more entry\
            \ point is not a valid conference"
        accessCode:
          type: string
          description: |-
            The access code to access the conference. The maximum length is 128 characters.
            When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
            Optional
        meetingCode:
          type: string
          description: |-
            The meeting code to access the conference. The maximum length is 128 characters.
            When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
            Optional
        label:
          type: string
          description: "The label for the URI. Visible to end users. Not localized.\
            \ The maximum length is 512 characters.\nExamples:  \n- for video: meet.google.com/aaa-bbbb-ccc\n\
            - for phone: +1 123 268 2601\n- for sip: 12345678@altostrat.com\n- for\
            \ more: should not be filled  \nOptional"
        uri:
          type: string
          description: "The URI of the entry point. The maximum length is 1300 characters.\n\
            Format:  \n- for video, http: or https: schema is required.\n- for phone,\
            \ tel: schema is required. The URI should include the entire dial sequence\
            \ (e.g., tel:+12345678900,,,123456789;1234).\n- for sip, sip: schema is\
            \ required, e.g., sip:12345678@myprovider.com.\n- for more, http: or https:\
            \ schema is required"
        passcode:
          type: string
          description: |-
            The passcode to access the conference. The maximum length is 128 characters.
            When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed
      description: Represents information for different methods of joining a conference
        or event
    EventWorkingLocationProperties:
      type: object
      properties:
        officeLocation:
          $ref: '#/components/schemas/EventWorkingLocationPropertiesOfficeLocation'
        homeOffice:
          description: "If present, specifies that the user is working at home"
        customLocation:
          $ref: '#/components/schemas/EventWorkingLocationPropertiesCustomLocation'
        type:
          type: string
          description: "Type of the working location. Possible values are:  \n- \"\
            homeOffice\" - The user is working at home. \n- \"officeLocation\" - The\
            \ user is working from an office. \n- \"customLocation\" - The user is\
            \ working from a custom location.  Any details are specified in a sub-field\
            \ of the specified name, but this field may be missing if empty. Any other\
            \ fields are ignored.\nRequired when adding working location properties"
      description: Conveys information about the working location of a user during
        an event
    FreeBusyRequestItem:
      type: object
      properties:
        id:
          type: string
          description: The identifier of a calendar or a group
      description: Identifies the target calendar or group for which free/busy information
        is requested
    EventOrganizer:
      type: object
      properties:
        displayName:
          type: string
          description: "The organizer's name, if available"
        self:
          type: boolean
          description: Whether the organizer corresponds to the calendar on which
            this copy of the event appears. Read-only. The default is False
          default: false
        id:
          type: string
          description: "The organizer's Profile ID, if available"
        email:
          type: string
          description: "The organizer's email address, if available. It must be a\
            \ valid email address as per RFC5322"
      description: "The organizer of the event. If the organizer is also an attendee,\
        \ this is indicated with a separate entry in attendees with the organizer\
        \ field set to True. To change the organizer, use the move operation. Read-only,\
        \ except when importing an event"
    EventWorkingLocationPropertiesOfficeLocation:
      type: object
      properties:
        floorId:
          type: string
          description: An optional floor identifier
        floorSectionId:
          type: string
          description: An optional floor section identifier
        label:
          type: string
          description: The office name that's displayed in Calendar Web and Mobile
            clients. We recommend you reference a building name in the organization's
            Resources database
        deskId:
          type: string
          description: An optional desk identifier
        buildingId:
          type: string
          description: An optional building identifier. This should reference a building
            ID in the organization's Resources database
      description: "If present, specifies that the user is working from an office"
    EventWorkingLocationPropertiesCustomLocation:
      type: object
      properties:
        label:
          type: string
          description: An optional extra label for additional information
      description: "If present, specifies that the user is working from a custom location"
    CalendarListEntry:
      type: object
      properties:
        conferenceProperties:
          $ref: '#/components/schemas/ConferenceProperties'
        summary:
          type: string
          description: Title of the calendar. Read-only
        backgroundColor:
          type: string
          description: "The main color of the calendar in the hexadecimal format \"\
            #0088aa\". This property supersedes the index-based colorId property.\
            \ To set or change this property, you need to specify colorRgbFormat=true\
            \ in the parameters of the insert, update and patch methods. Optional"
        hidden:
          type: boolean
          description: "Whether the calendar has been hidden from the list. Optional.\
            \ The attribute is only returned when the calendar is hidden, in which\
            \ case the value is true"
          default: false
        colorId:
          type: string
          description: The color of the calendar. This is an ID referring to an entry
            in the calendar section of the colors definition (see the colors endpoint).
            This property is superseded by the backgroundColor and foregroundColor
            properties and can be ignored when using these properties. Optional
        kind:
          type: string
          description: Type of the resource ("calendar#calendarListEntry")
          default: calendar#calendarListEntry
        description:
          type: string
          description: Description of the calendar. Optional. Read-only
        timeZone:
          type: string
          description: The time zone of the calendar. Optional. Read-only
        foregroundColor:
          type: string
          description: "The foreground color of the calendar in the hexadecimal format\
            \ \"#ffffff\". This property supersedes the index-based colorId property.\
            \ To set or change this property, you need to specify colorRgbFormat=true\
            \ in the parameters of the insert, update and patch methods. Optional"
        notificationSettings:
          $ref: '#/components/schemas/CalendarListEntryNotificationSettings'
        deleted:
          type: boolean
          description: Whether this calendar list entry has been deleted from the
            calendar list. Read-only. Optional. The default is False
          default: false
        summaryOverride:
          type: string
          description: The summary that the authenticated user has set for this calendar.
            Optional
        defaultReminders:
          type: array
          description: The default reminders that the authenticated user has for this
            calendar
          items:
            $ref: '#/components/schemas/EventReminder'
        accessRole:
          type: string
          description: "The effective access role that the authenticated user has\
            \ on the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\"\
            \ - Provides read access to free/busy information. \n- \"reader\" - Provides\
            \ read access to the calendar. Private events will appear to users with\
            \ reader access, but event details will be hidden. \n- \"writer\" - Provides\
            \ read and write access to the calendar. Private events will appear to\
            \ users with writer access, and event details will be visible. \n- \"\
            owner\" - Provides ownership of the calendar. This role has all of the\
            \ permissions of the writer role with the additional ability to see and\
            \ manipulate ACLs"
        etag:
          type: string
          description: ETag of the resource
        location:
          type: string
          description: Geographic location of the calendar as free-form text. Optional.
            Read-only
        id:
          type: string
          description: Identifier of the calendar
        selected:
          type: boolean
          description: Whether the calendar content shows up in the calendar UI. Optional.
            The default is False
          default: false
        primary:
          type: boolean
          description: Whether the calendar is the primary calendar of the authenticated
            user. Read-only. Optional. The default is False
          default: false
      description: Represent calendar properties which allow users to manage and interact
        with their calendars effectively
    Events:
      type: object
      properties:
        summary:
          type: string
          description: Title of the calendar. Read-only
        defaultReminders:
          type: array
          description: The default reminders on the calendar for the authenticated
            user. These reminders apply to all events on this calendar that do not
            explicitly override them (i.e. do not have reminders.useDefault set to
            True)
          items:
            $ref: '#/components/schemas/EventReminder'
        kind:
          type: string
          description: Type of the collection ("calendar#events")
          default: calendar#events
        nextPageToken:
          type: string
          description: "Token used to access the next page of this result. Omitted\
            \ if no further results are available, in which case nextSyncToken is\
            \ provided"
        nextSyncToken:
          type: string
          description: "Token used at a later point in time to retrieve only the entries\
            \ that have changed since this result was returned. Omitted if further\
            \ results are available, in which case nextPageToken is provided"
        accessRole:
          type: string
          description: "The user's access role for this calendar. Read-only. Possible\
            \ values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\"\
            \ - The user has read access to free/busy information. \n- \"reader\"\
            \ - The user has read access to the calendar. Private events will appear\
            \ to users with reader access, but event details will be hidden. \n- \"\
            writer\" - The user has read and write access to the calendar. Private\
            \ events will appear to users with writer access, and event details will\
            \ be visible. \n- \"owner\" - The user has ownership of the calendar.\
            \ This role has all of the permissions of the writer role with the additional\
            \ ability to see and manipulate ACLs"
        description:
          type: string
          description: Description of the calendar. Read-only
        timeZone:
          type: string
          description: The time zone of the calendar. Read-only
        etag:
          type: string
          description: ETag of the collection
        items:
          type: array
          description: List of events on the calendar
          items:
            $ref: '#/components/schemas/Event'
        updated:
          type: string
          description: Last modification time of the calendar (as a RFC3339 timestamp).
            Read-only
          format: date-time
      description: Reprsents event properties which allow users to access and manage
        calendar event
    EventExtendedProperties:
      type: object
      properties:
        shared:
          type: object
          additionalProperties:
            type: string
            description: The name of the shared property and the corresponding value.
          description: Properties that are shared between copies of the event on other
            attendees' calendars
        private:
          type: object
          additionalProperties:
            type: string
            description: The name of the private property and the corresponding value.
          description: Properties that are private to the copy of the event that appears
            on this calendar
      description: Extended properties of the event
    CalendarList:
      type: object
      properties:
        kind:
          type: string
          description: Type of the collection ("calendar#calendarList")
          default: calendar#calendarList
        nextPageToken:
          type: string
          description: "Token used to access the next page of this result. Omitted\
            \ if no further results are available, in which case nextSyncToken is\
            \ provided"
        nextSyncToken:
          type: string
          description: "Token used at a later point in time to retrieve only the entries\
            \ that have changed since this result was returned. Omitted if further\
            \ results are available, in which case nextPageToken is provided"
        etag:
          type: string
          description: ETag of the collection
        items:
          type: array
          description: Calendars that are present on the user's calendar list
          items:
            $ref: '#/components/schemas/CalendarListEntry'
      description: Represents list of calendars associated with the user's account
    ConferenceData:
      type: object
      properties:
        entryPoints:
          type: array
          description: |-
            Information about individual conference entry points, such as URLs or phone numbers.
            All of them must belong to the same conference.
            Either conferenceSolution and at least one entryPoint, or createRequest is required
          items:
            $ref: '#/components/schemas/EntryPoint'
        notes:
          type: string
          description: "Additional notes (such as instructions from the domain administrator,\
            \ legal notices) to display to the user. Can contain HTML. The maximum\
            \ length is 2048 characters. Optional"
        conferenceId:
          type: string
          description: "The ID of the conference.\nCan be used by developers to keep\
            \ track of conferences, should not be displayed to users.\nThe ID value\
            \ is formed differently for each conference solution type:  \n- eventHangout:\
            \ ID is not set. (This conference type is deprecated.)\n- eventNamedHangout:\
            \ ID is the name of the Hangout. (This conference type is deprecated.)\n\
            - hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc.\n\
            - addOn: ID is defined by the third-party provider.  Optional"
        createRequest:
          $ref: '#/components/schemas/CreateConferenceRequest'
        signature:
          type: string
          description: |-
            The signature of the conference data.
            Generated on server side.
            Unset for a conference with a failed create request.
            Optional for a conference with a pending create request
        conferenceSolution:
          $ref: '#/components/schemas/ConferenceSolution'
        parameters:
          $ref: '#/components/schemas/ConferenceParameters'
      description: Represents information about conferences associated with calendar
        events
    ColorDefinition:
      type: object
      properties:
        background:
          type: string
          description: The background color associated with this color definition
        foreground:
          type: string
          description: The foreground color that can be used to write on top of a
            background with 'background' color
      description: Defines and manages color combinations associated with calendar
        events
    ConferenceRequestStatus:
      type: object
      properties:
        statusCode:
          type: string
          description: "The current status of the conference create request. Read-only.\n\
            The possible values are:  \n- \"pending\": the conference create request\
            \ is still being processed.\n- \"success\": the conference create request\
            \ succeeded, the entry points are populated.\n- \"failure\": the conference\
            \ create request failed, there are no entry points"
      description: Provides information about the current status of a conference create
        request
    EventReminder:
      type: object
      properties:
        method:
          type: string
          description: "The method used by this reminder. Possible values are:  \n\
            - \"email\" - Reminders are sent via email. \n- \"popup\" - Reminders\
            \ are sent via a UI popup.  \nRequired when adding a reminder"
        minutes:
          type: integer
          description: |-
            Number of minutes before the start of the event when the reminder should trigger. Valid values are between 0 and 40320 (4 weeks in minutes).
            Required when adding a reminder
          format: int32
      description: Allows users to define how and when to be reminded of upcoming
        events
    EventReminders:
      type: object
      properties:
        overrides:
          type: array
          description: "If the event doesn't use the default reminders, this lists\
            \ the reminders specific to the event, or, if not set, indicates that\
            \ no reminders are set for this event. The maximum number of override\
            \ reminders is 5"
          items:
            $ref: '#/components/schemas/EventReminder'
        useDefault:
          type: boolean
          description: Whether the default reminders of the calendar apply to the
            event
      description: Information about the event's reminders for the authenticated user
    EventAttendee:
      type: object
      properties:
        additionalGuests:
          type: integer
          description: Number of additional guests. Optional. The default is 0
          format: int32
          default: 0
        resource:
          type: boolean
          description: Whether the attendee is a resource. Can only be set when the
            attendee is added to the event for the first time. Subsequent modifications
            are ignored. Optional. The default is False
          default: false
        displayName:
          type: string
          description: "The attendee's name, if available. Optional"
        organizer:
          type: boolean
          description: Whether the attendee is the organizer of the event. Read-only.
            The default is False
        self:
          type: boolean
          description: Whether this entry represents the calendar on which this copy
            of the event appears. Read-only. The default is False
          default: false
        comment:
          type: string
          description: The attendee's response comment. Optional
        optional:
          type: boolean
          description: Whether this is an optional attendee. Optional. The default
            is False
          default: false
        id:
          type: string
          description: "The attendee's Profile ID, if available"
        responseStatus:
          type: string
          description: "The attendee's response status. Possible values are:  \n-\
            \ \"needsAction\" - The attendee has not responded to the invitation (recommended\
            \ for new events). \n- \"declined\" - The attendee has declined the invitation.\
            \ \n- \"tentative\" - The attendee has tentatively accepted the invitation.\
            \ \n- \"accepted\" - The attendee has accepted the invitation.  Warning:\
            \ If you add an event using the values declined, tentative, or accepted,\
            \ attendees with the \"Add invitations to my calendar\" setting set to\
            \ \"When I respond to invitation in email\" won't see an event on their\
            \ calendar unless they choose to change their invitation response in the\
            \ event invitation email"
        email:
          type: string
          description: |-
            The attendee's email address, if available. This field must be present when adding an attendee. It must be a valid email address as per RFC5322.
            Required when adding an attendee
      description: Manages and describes attendees and their responses to calendar
        events
    TimePeriod:
      type: object
      properties:
        start:
          type: string
          description: The (inclusive) start of the time period
          format: date-time
        end:
          type: string
          description: The (exclusive) end of the time period
          format: date-time
      description: Defines and represents time intervals or periods
    Calendar:
      type: object
      properties:
        conferenceProperties:
          $ref: '#/components/schemas/ConferenceProperties'
        summary:
          type: string
          description: Title of the calendar
        kind:
          type: string
          description: Type of the resource ("calendar#calendar")
          default: calendar#calendar
        description:
          type: string
          description: Description of the calendar. Optional
        timeZone:
          type: string
          description: "The time zone of the calendar. (Formatted as an IANA Time\
            \ Zone Database name, e.g. \"Europe/Zurich\".) Optional"
        etag:
          type: string
          description: ETag of the resource
        location:
          type: string
          description: Geographic location of the calendar as free-form text. Optional
        id:
          type: string
          description: Identifier of the calendar. To retrieve IDs call the calendarList.list()
            method
      description: Defines and manages individual calendars
    Error:
      type: object
      properties:
        reason:
          type: string
          description: "Specific reason for the error. Some of the possible values\
            \ are:  \n- \"groupTooBig\" - The group of users requested is too large\
            \ for a single query. \n- \"tooManyCalendarsRequested\" - The number of\
            \ calendars requested is too large for a single query. \n- \"notFound\"\
            \ - The requested resource was not found. \n- \"internalError\" - The\
            \ API service has encountered an internal error.  Additional error types\
            \ may be added in the future, so clients should gracefully handle additional\
            \ error statuses not included in this list"
        domain:
          type: string
          description: "Domain, or broad category, of the error"
      description: Represents detailed information about errors encountered in operations
    Acl:
      type: object
      properties:
        kind:
          type: string
          description: Type of the collection ("calendar#acl")
          default: calendar#acl
        nextPageToken:
          type: string
          description: "Token used to access the next page of this result. Omitted\
            \ if no further results are available, in which case nextSyncToken is\
            \ provided"
        nextSyncToken:
          type: string
          description: "Token used at a later point in time to retrieve only the entries\
            \ that have changed since this result was returned. Omitted if further\
            \ results are available, in which case nextPageToken is provided"
        etag:
          type: string
          description: ETag of the collection
        items:
          type: array
          description: List of rules on the access control list
          items:
            $ref: '#/components/schemas/AclRule'
      description: Manages access control and permissions for calendars and events
    CalendarNotification:
      type: object
      properties:
        method:
          type: string
          description: "The method used to deliver the notification. The possible\
            \ value is:  \n- \"email\" - Notifications are sent via email.  \nRequired\
            \ when adding a notification"
        type:
          type: string
          description: "The type of notification. Possible values are:  \n- \"eventCreation\"\
            \ - Notification sent when a new event is put on the calendar. \n- \"\
            eventChange\" - Notification sent when an event is changed. \n- \"eventCancellation\"\
            \ - Notification sent when an event is cancelled. \n- \"eventResponse\"\
            \ - Notification sent when an attendee responds to the event invitation.\
            \ \n- \"agenda\" - An agenda with the events of the day (sent out in the\
            \ morning).  \nRequired when adding a notification"
      description: Manages notification preferences of the calendars
    CreateConferenceRequest:
      type: object
      properties:
        requestId:
          type: string
          description: |-
            The client-generated unique ID for this request.
            Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored
        conferenceSolutionKey:
          $ref: '#/components/schemas/ConferenceSolutionKey'
        status:
          $ref: '#/components/schemas/ConferenceRequestStatus'
      description: Represents the request to create a conference within a calendar
        event
    FreeBusyGroup:
      type: object
      properties:
        calendars:
          type: array
          description: List of calendars' identifiers within a group
          items:
            type: string
        errors:
          type: array
          description: Optional error(s) (if computation for the group failed)
          items:
            $ref: '#/components/schemas/Error'
      description: Provides information about free/busy schedules for a group of calendars
    EventCreator:
      type: object
      properties:
        displayName:
          type: string
          description: "The creator's name, if available"
        self:
          type: boolean
          description: Whether the creator corresponds to the calendar on which this
            copy of the event appears. Read-only. The default is False
          default: false
        id:
          type: string
          description: "The creator's Profile ID, if available"
        email:
          type: string
          description: "The creator's email address, if available"
      description: The creator of the event. Read-only
    FreeBusyCalendar:
      type: object
      properties:
        busy:
          type: array
          description: List of time ranges during which this calendar should be regarded
            as busy
          items:
            $ref: '#/components/schemas/TimePeriod'
        errors:
          type: array
          description: Optional error(s) (if computation for the calendar failed)
          items:
            $ref: '#/components/schemas/Error'
      description: Response data with free/busy information
    FreeBusyRequest:
      type: object
      properties:
        timeMax:
          type: string
          description: The end of the interval for the query formatted as per RFC3339
          format: date-time
        timeZone:
          type: string
          description: Time zone used in the response. Optional. The default is UTC
          default: UTC
        calendarExpansionMax:
          type: integer
          description: Maximal number of calendars for which FreeBusy information
            is to be provided. Optional. Maximum value is 50
          format: int32
        groupExpansionMax:
          type: integer
          description: Maximal number of calendar identifiers to be provided for a
            single group. Optional. An error is returned for a group with more members
            than this value. Maximum value is 100
          format: int32
        timeMin:
          type: string
          description: The start of the interval for the query formatted as per RFC3339
          format: date-time
        items:
          type: array
          description: List of calendars and/or groups to query
          items:
            $ref: '#/components/schemas/FreeBusyRequestItem'
      description: Contains parameters for a request to retrieve free/busy information
        for a set of calendars and groups
    ConferenceParametersAddOnParameters:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties:
            type: string
      description: This type is used for adding parameters that control the behavior
        of a conference
    ConferenceSolutionKey:
      type: object
      properties:
        type:
          type: string
          description: "The conference solution type.\nIf a client encounters an unfamiliar\
            \ or empty type, it should still be able to display the entry points.\
            \ However, it should disallow modifications.\nThe possible values are:\
            \  \n- \"eventHangout\" for Hangouts for consumers (deprecated; existing\
            \ events may show this conference solution type but new conferences cannot\
            \ be created)\n- \"eventNamedHangout\" for classic Hangouts for Google\
            \ Workspace users (deprecated; existing events may show this conference\
            \ solution type but new conferences cannot be created)\n- \"hangoutsMeet\"\
            \ for Google Meet (http://meet.google.com)\n- \"addOn\" for 3P conference\
            \ providers"
      description: Represents the key information for a conference solution
    EventAttachment:
      type: object
      properties:
        iconLink:
          type: string
          description: URL link to the attachment's icon. This field can only be modified
            for custom third-party attachments
        fileUrl:
          type: string
          description: |-
            URL link to the attachment.
            For adding Google Drive file attachments use the same format as in alternateLink property of the Files resource in the Drive API.
            Required when adding an attachment
        mimeType:
          type: string
          description: Internet media type (MIME type) of the attachment
        title:
          type: string
          description: Attachment title
        fileId:
          type: string
          description: |-
            ID of the attached file. Read-only.
            For Google Drive files, this is the ID of the corresponding Files resource entry in the Drive API
      description: Contains information about an attachment associated with an event
    EventSource:
      type: object
      properties:
        title:
          type: string
          description: Title of the source; for example a title of a web page or an
            email subject
        url:
          type: string
          description: URL of the source pointing to a resource. The URL scheme must
            be HTTP or HTTPS
      description: "Source from which the event was created. For example, a web page,\
        \ an email message or any document identifiable by an URL with HTTP or HTTPS\
        \ scheme. Can only be seen or modified by the creator of the event"
    Colors:
      type: object
      properties:
        calendar:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ColorDefinition'
          description: "A global palette of calendar colors, mapping from the color\
            \ ID to its definition. A calendarListEntry resource refers to one of\
            \ these color IDs in its colorId field. Read-only"
        kind:
          type: string
          description: Type of the resource ("calendar#colors")
          default: calendar#colors
        event:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ColorDefinition'
          description: "A global palette of event colors, mapping from the color ID\
            \ to its definition. An event resource may refer to one of these color\
            \ IDs in its colorId field. Read-only"
        updated:
          type: string
          description: Last modification time of the color palette (as a RFC3339 timestamp).
            Read-only
          format: date-time
      description: Represents a global palette of calendar and event colors used in
        Google Calendar
    ConferenceParameters:
      type: object
      properties:
        addOnParameters:
          $ref: '#/components/schemas/ConferenceParametersAddOnParameters'
      description: Represents parameters related to conference settings for events
    Event:
      type: object
      properties:
        reminders:
          $ref: '#/components/schemas/EventReminders'
        attachments:
          type: array
          description: |-
            File attachments for the event.
            In order to modify attachments the supportsAttachments request parameter should be set to true.
            There can be at most 25 attachments per event,
          items:
            $ref: '#/components/schemas/EventAttachment'
        workingLocationProperties:
          $ref: '#/components/schemas/EventWorkingLocationProperties'
        colorId:
          type: string
          description: The color of the event. This is an ID referring to an entry
            in the event section of the colors definition (see the  colors endpoint).
            Optional
        hangoutLink:
          type: string
          description: An absolute link to the Google Hangout associated with this
            event. Read-only
        attendeesOmitted:
          type: boolean
          description: "Whether attendees may have been omitted from the event's representation.\
            \ When retrieving an event, this may be due to a restriction specified\
            \ by the maxAttendee query parameter. When updating an event, this can\
            \ be used to only update the participant's response. Optional. The default\
            \ is False"
          default: false
        description:
          type: string
          description: Description of the event. Can contain HTML. Optional
        source:
          $ref: '#/components/schemas/EventSource'
        extendedProperties:
          $ref: '#/components/schemas/EventExtendedProperties'
        guestsCanModify:
          type: boolean
          description: Whether attendees other than the organizer can modify the event.
            Optional. The default is False
          default: false
        recurringEventId:
          type: string
          description: "For an instance of a recurring event, this is the id of the\
            \ recurring event to which this instance belongs. Immutable"
        endTimeUnspecified:
          type: boolean
          description: "Whether the end time is actually unspecified. An end time\
            \ is still provided for compatibility reasons, even if this attribute\
            \ is set to True. The default is False"
          default: false
        guestsCanSeeOtherGuests:
          type: boolean
          description: Whether attendees other than the organizer can see who the
            event's attendees are. Optional. The default is True
          default: true
        end:
          $ref: '#/components/schemas/EventDateTime'
        id:
          type: string
          description: "Opaque identifier of the event. When creating new single or\
            \ recurring events, you can specify their IDs. Provided IDs must follow\
            \ these rules:  \n- characters allowed in the ID are those used in base32hex\
            \ encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2\
            \ in RFC2938 \n- the length of the ID must be between 5 and 1024 characters\
            \ \n- the ID must be unique per calendar  Due to the globally distributed\
            \ nature of the system, we cannot guarantee that ID collisions will be\
            \ detected at event creation time. To minimize the risk of collisions\
            \ we recommend using an established UUID algorithm such as one described\
            \ in RFC4122.\nIf you do not specify an ID, it will be automatically generated\
            \ by the server.\nNote that the icalUID and the id are not identical and\
            \ only one of them should be supplied at event creation time. One difference\
            \ in their semantics is that in recurring events, all occurrences of one\
            \ event have different ids while they all share the same icalUIDs"
        locked:
          type: boolean
          description: "Whether this is a locked event copy where no changes can be\
            \ made to the main event fields \"summary\", \"description\", \"location\"\
            , \"start\", \"end\" or \"recurrence\". The default is False. Read-Only"
          default: false
        anyoneCanAddSelf:
          type: boolean
          description: Whether anyone can invite themselves to the event (deprecated).
            Optional. The default is False
          default: false
        summary:
          type: string
          description: Title of the event
        creator:
          $ref: '#/components/schemas/EventCreator'
        privateCopy:
          type: boolean
          description: "If set to True, Event propagation is disabled. Note that it\
            \ is not the same thing as Private event properties. Optional. Immutable.\
            \ The default is False"
          default: false
        visibility:
          type: string
          description: "Visibility of the event. Optional. Possible values are:  \n\
            - \"default\" - Uses the default visibility for events on the calendar.\
            \ This is the default value. \n- \"public\" - The event is public and\
            \ event details are visible to all readers of the calendar. \n- \"private\"\
            \ - The event is private and only event attendees may view event details.\
            \ \n- \"confidential\" - The event is private. This value is provided\
            \ for compatibility reasons"
          default: default
        attendees:
          type: array
          description: The attendees of the event. See the Events with attendees guide
            for more information on scheduling events with other calendar users. Service
            accounts need to use domain-wide delegation of authority to populate the
            attendee list
          items:
            $ref: '#/components/schemas/EventAttendee'
        created:
          type: string
          description: Creation time of the event (as a RFC3339 timestamp). Read-only
          format: date-time
        htmlLink:
          type: string
          description: An absolute link to this event in the Google Calendar Web UI.
            Read-only
        kind:
          type: string
          description: Type of the resource ("calendar#event")
          default: calendar#event
        iCalUID:
          type: string
          description: |-
            Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method.
            Note that the iCalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same iCalUIDs. To retrieve an event using its iCalUID, call the events.list method using the iCalUID parameter. To retrieve an event using its id, call the events.get method
        start:
          $ref: '#/components/schemas/EventDateTime'
        originalStartTime:
          $ref: '#/components/schemas/EventDateTime'
        eventType:
          type: string
          description: "Specific type of the event. This cannot be modified after\
            \ the event is created. Possible values are:  \n- \"default\" - A regular\
            \ event or not further specified. \n- \"outOfOffice\" - An out-of-office\
            \ event. \n- \"focusTime\" - A focus-time event. \n- \"workingLocation\"\
            \ - A working location event.  Currently, only \"default \" and \"workingLocation\"\
            \ events can be created using the API. Extended support for other event\
            \ types will be made available in later releases"
          default: default
        recurrence:
          type: array
          description: "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring\
            \ event, as specified in RFC5545. Note that DTSTART and DTEND lines are\
            \ not allowed in this field; event start and end times are specified in\
            \ the start and end fields. This field is omitted for single events or\
            \ instances of recurring events"
          items:
            type: string
        sequence:
          type: integer
          description: Sequence number as per iCalendar
          format: int32
        organizer:
          $ref: '#/components/schemas/EventOrganizer'
        transparency:
          type: string
          description: "Whether the event blocks time on the calendar. Optional. Possible\
            \ values are:  \n- \"opaque\" - Default value. The event does block time\
            \ on the calendar. This is equivalent to setting Show me as to Busy in\
            \ the Calendar UI. \n- \"transparent\" - The event does not block time\
            \ on the calendar. This is equivalent to setting Show me as to Available\
            \ in the Calendar UI"
          default: opaque
        conferenceData:
          $ref: '#/components/schemas/ConferenceData'
        etag:
          type: string
          description: ETag of the resource
        location:
          type: string
          description: Geographic location of the event as free-form text. Optional
        guestsCanInviteOthers:
          type: boolean
          description: Whether attendees other than the organizer can invite others
            to the event. Optional. The default is True
          default: true
        updated:
          type: string
          description: Last modification time of the event (as a RFC3339 timestamp).
            Read-only
          format: date-time
        status:
          type: string
          description: "Status of the event. Optional. Possible values are:  \n- \"\
            confirmed\" - The event is confirmed. This is the default status. \n-\
            \ \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\"\
            \ - The event is cancelled (deleted). The list method returns cancelled\
            \ events only on incremental sync (when syncToken or updatedMin are specified)\
            \ or if the showDeleted flag is set to true. The get method always returns\
            \ them.\nA cancelled status represents two different states depending\
            \ on the event type:  \n- Cancelled exceptions of an uncancelled recurring\
            \ event indicate that this instance should no longer be presented to the\
            \ user. Clients should store these events for the lifetime of the parent\
            \ recurring event.\nCancelled exceptions are only guaranteed to have values\
            \ for the id, recurringEventId and originalStartTime fields populated.\
            \ The other fields might be empty.  \n- All other cancelled events represent\
            \ deleted events. Clients should remove their locally synced copies. Such\
            \ cancelled events will eventually disappear, so do not rely on them being\
            \ available indefinitely.\nDeleted events are only guaranteed to have\
            \ the id field populated.   On the organizer's calendar, cancelled events\
            \ continue to expose event details (summary, location, etc.) so that they\
            \ can be restored (undeleted). Similarly, the events to which the user\
            \ was invited and that they manually removed continue to provide details.\
            \ However, incremental sync requests with showDeleted set to false will\
            \ not return these details.\nIf an event changes its organizer (for example\
            \ via the move operation) and the original organizer is not on the attendee\
            \ list, it will leave behind a cancelled event where only the id field\
            \ is guaranteed to be populated"
      description: Represents an event in Google Calendar
    AclRuleScope:
      type: object
      properties:
        type:
          type: string
          description: "The type of the scope. Possible values are:  \n- \"default\"\
            \ - The public scope. This is the default value. \n- \"user\" - Limits\
            \ the scope to a single user. \n- \"group\" - Limits the scope to a group.\
            \ \n- \"domain\" - Limits the scope to a domain.  Note: The permissions\
            \ granted to the \"default\", or public, scope apply to any user, authenticated\
            \ or not"
        value:
          type: string
          description: "The email address of a user or group, or the name of a domain,\
            \ depending on the scope type. Omitted for type \"default\""
      description: The extent to which calendar access is granted by this ACL rule
    ConferenceProperties:
      type: object
      properties:
        allowedConferenceSolutionTypes:
          type: array
          description: "The types of conference solutions that are supported for this\
            \ calendar.\nThe possible values are:  \n- \"eventHangout\" \n- \"eventNamedHangout\"\
            \ \n- \"hangoutsMeet\"  Optional"
          items:
            type: string
      description: Specify the types of conference solutions supported for a calendar
    AclRule:
      type: object
      properties:
        role:
          type: string
          description: "The role assigned to the scope. Possible values are:  \n-\
            \ \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read\
            \ access to free/busy information. \n- \"reader\" - Provides read access\
            \ to the calendar. Private events will appear to users with reader access,\
            \ but event details will be hidden. \n- \"writer\" - Provides read and\
            \ write access to the calendar. Private events will appear to users with\
            \ writer access, and event details will be visible. \n- \"owner\" - Provides\
            \ ownership of the calendar. This role has all of the permissions of the\
            \ writer role with the additional ability to see and manipulate ACLs"
        kind:
          type: string
          description: Type of the resource ("calendar#aclRule")
          default: calendar#aclRule
        scope:
          $ref: '#/components/schemas/AclRuleScope'
        etag:
          type: string
          description: ETag of the resource
        id:
          type: string
          description: Identifier of the Access Control List (ACL) rule. See Sharing
            calendars
      description: Defines access control rules for a calendar
    CalendarListEntryNotificationSettings:
      type: object
      properties:
        notifications:
          type: array
          description: The list of notifications set for this calendar
          items:
            $ref: '#/components/schemas/CalendarNotification'
      description: The notifications that the authenticated user is receiving for
        this calendar
  parameters:
    alt:
      name: alt
      in: query
      description: Data format for the response
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - json
    fields:
      name: fields
      in: query
      description: Selector specifying which fields to include in a partial response
      required: false
      style: form
      explode: true
      schema:
        type: string
    key:
      name: key
      in: query
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token"
      required: false
      style: form
      explode: true
      schema:
        type: string
    oauth_token:
      name: oauth_token
      in: query
      description: OAuth 2.0 token for the current user
      required: false
      style: form
      explode: true
      schema:
        type: string
      x-ballerina-name: oauthToken
    prettyPrint:
      name: prettyPrint
      in: query
      description: Returns response with indentations and line breaks
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    quotaUser:
      name: quotaUser
      in: query
      description: An opaque string that represents a user for quota purposes. Must
        not exceed 40 characters
      required: false
      style: form
      explode: true
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/calendar: "See, edit, share, and permanently\
              \ delete all the calendars you can access using Google Calendar"
            https://www.googleapis.com/auth/calendar.events: View and edit events
              on all your calendars
            https://www.googleapis.com/auth/calendar.events.readonly: View events
              on all your calendars
            https://www.googleapis.com/auth/calendar.readonly: See and download any
              calendar you can access using your Google Calendar
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/calendar: "See, edit, share, and permanently\
              \ delete all the calendars you can access using Google Calendar"
            https://www.googleapis.com/auth/calendar.events: View and edit events
              on all your calendars
            https://www.googleapis.com/auth/calendar.events.readonly: View events
              on all your calendars
            https://www.googleapis.com/auth/calendar.readonly: See and download any
              calendar you can access using your Google Calendar
